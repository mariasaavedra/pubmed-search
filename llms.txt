# PubMed E-Utilities API

## 

- [Main API Documentation](https://www.ncbi.nlm.nih.gov/books/NBK25497/)
- [Getting Started Guide](https://www.ncbi.nlm.nih.gov/books/NBK25500/)
- [Entrez Programming Utilities Help](https://www.ncbi.nlm.nih.gov/books/NBK25501/)
- [EDirect CLI Tool](https://www.ncbi.nlm.nih.gov/books/NBK179288/)

## APIs

- [EInfo](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.EInfo): Retrieve available databases, fields, and links
- [ESearch](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.ESearch): Search Entrez databases by term
- [ESummary](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.ESummary): Get document summaries
- [EFetch](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.EFetch): Download full data records
- [EPost](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.EPost): Upload UIDs to History server
- [ELink](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.ELink): Get linked data (citations, related)
- [EGQuery](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.EGQuery): Global Entrez search
- [ESpell](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.ESpell): Get spelling suggestions
- [ECitMatch](https://www.ncbi.nlm.nih.gov/books/NBK25499/#chapter1.ECitMatch): Match citation strings to PMIDs

## Examples

- [Search for "cancer" in PubMed](https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&term=cancer)
- [Get summary for PMID 30049270](https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=30049270)
- [Fetch full record for PMID 30049270](https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=30049270&retmode=xml)
- [Link related citations for PMID 30049270](https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=pubmed&id=30049270)
- [Spell suggestion for "cardiomyopthy"](https://eutils.ncbi.nlm.nih.gov/entrez/eutils/espell.fcgi?db=pubmed&term=cardiomyopthy)

## Optional

- [Database Summary JSON](https://eutils.ncbi.nlm.nih.gov/entrez/eutils/einfo.fcgi?retmode=json)
- [UML Unified API Reference](https://www.ncbi.nlm.nih.gov/IEB/ToolBox/CPP_DOC/lxr/source/src/entrez/eutils/)
- [NCBI API Key Instructions](https://www.ncbi.nlm.nih.gov/account/settings/)

--- 
```md
# @xmldom/xmldom

> A pure JavaScript W3C standard-based (XML DOM Level 2 Core) `DOMParser` and `XMLSerializer` module. Enables XML parsing, manipulation, and serialization in Node.js and other JavaScript environments.

## 

- [npm Package](https://www.npmjs.com/package/@xmldom/xmldom)
- [GitHub Repository](https://github.com/xmldom/xmldom)
- [Changelog](https://github.com/xmldom/xmldom/blob/master/CHANGELOG.md)
- [Type Definitions](https://github.com/xmldom/xmldom/blob/master/index.d.ts)

## Usage

- [Installation](https://www.npmjs.com/package/@xmldom/xmldom#install)

  ```bash
  npm install @xmldom/xmldom
  ```

- [Basic Parsing and Serialization](https://www.npmjs.com/package/@xmldom/xmldom#example)

  ```javascript
  const { DOMParser, XMLSerializer } = require('@xmldom/xmldom');

  const xml = `<note><to>User</to><from>AI</from><message>Hello World</message></note>`;
  const doc = new DOMParser().parseFromString(xml, 'text/xml');
  const serialized = new XMLSerializer().serializeToString(doc);
  console.log(serialized);
  ```

- [TypeScript Support](https://www.npmjs.com/package/@xmldom/xmldom#example)

  ```typescript
  import { DOMParser } from '@xmldom/xmldom';

  const doc = new DOMParser().parseFromString('<root><child/></root>', 'application/xml');
  ```

## API Reference

- [DOMParser](https://developer.mozilla.org/en-US/docs/Web/API/DOMParser)
  - `parseFromString(xmlString, mimeType)`: Parses XML string into a DOM Document.

- [XMLSerializer](https://developer.mozilla.org/en-US/docs/Web/API/XMLSerializer)
  - `serializeToString(node)`: Serializes DOM node back into XML string.

- [Supported Interfaces](https://www.npmjs.com/package/@xmldom/xmldom#api-reference)
  - `Attr`, `CDATASection`, `CharacterData`, `Comment`, `Document`, `DocumentFragment`, `DocumentType`, `DOMException`, `DOMImplementation`, `Element`, `Entity`, `EntityReference`, `NamedNodeMap`, `Node`, `NodeList`, `Notation`, `ProcessingInstruction`, `Text`

## Examples

- [CodeSandbox Examples](https://codesandbox.io/examples/package/@xmldom/xmldom)
- [GitHub Gist: Reading and Updating XML Nodes](https://gist.github.com/DinoChiesa/dba1fca8748ffcd47d41ddef91016625)

## Optional

- [W3C DOM Level 2 Core Specification](https://www.w3.org/TR/DOM-Level-2-Core/)
- [W3C DOM Parsing and Serialization](https://www.w3.org/TR/DOM-Parsing/)
- [W3Schools XML DOM Tutorial](https://www.w3schools.com/xml/xml_dom.asp)
``` 
# jsdom

> A pure JavaScript implementation of many web standards, notably the WHATWG DOM and HTML specifications, for use in Node.js environments. Enables DOM manipulation, parsing, and scripting outside of a browser.

## 

- [GitHub Repo](https://github.com/jsdom/jsdom)
- [README](https://github.com/jsdom/jsdom#readme)
- [Changelog](https://github.com/jsdom/jsdom/blob/main/Changelog.md)
- [Contributing Guide](https://github.com/jsdom/jsdom/blob/main/Contributing.md)

## Usage

- [Basic usage](https://github.com/jsdom/jsdom#basic-usage): How to instantiate and use `JSDOM`
- [Customizing jsdom](https://github.com/jsdom/jsdom#customizing-jsdom): Options like `url`, `referrer`, `contentType`, `includeNodeLocations`
- [Executing scripts](https://github.com/jsdom/jsdom#executing-scripts): `runScripts`, virtual console, `resources` options
- [Loading external resources](https://github.com/jsdom/jsdom#loading-subresources): Resource loader setup
- [Virtual console](https://github.com/jsdom/jsdom#virtual-consoles): Forward browser logs to Node
- [Creating custom DOMs](https://github.com/jsdom/jsdom#customizing-jsdom): Emulate browser-like environments

## Examples

- [Minimal Example](https://github.com/jsdom/jsdom#basic-usage)
- [With External URL and Script Execution](https://github.com/jsdom/jsdom#executing-scripts)
- [Advanced Configuration with Virtual Console](https://github.com/jsdom/jsdom#virtual-consoles)

## Optional

- [jsdom-global](https://github.com/rstacruz/jsdom-global): Automatically injects jsdom into the Node.js global context
- [jsdomâ€™s test suite](https://github.com/jsdom/jsdom/tree/main/test): Internal examples and standards conformance
- [WhatWG DOM spec](https://dom.spec.whatwg.org/)
- [HTML spec](https://html.spec.whatwg.org/)
